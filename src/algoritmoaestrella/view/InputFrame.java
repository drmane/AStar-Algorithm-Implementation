/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package algoritmoaestrella.view;

import algoritmoaestrella.logic.AStar;
import algoritmoaestrella.structures.Position;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author usuario_local
 */
public class InputFrame extends javax.swing.JFrame {
    
    //Para poder cambiar par√°metros del tablero
    private Board tablero;

    /**
     * Creates new form VistaEntrada
     */
    public InputFrame() {
        initComponents();
        
        salida.setSelected(true);
        
        this.jFormattedTextField1.setText("0");
        
        log.append("\n");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        salida = new javax.swing.JRadioButton();
        obstaculo = new javax.swing.JRadioButton();
        meta = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        waypoint = new javax.swing.JRadioButton();
        peligro = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritmo A*");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Insertar");

        buttonGroup1.add(salida);
        salida.setText("Salida");
        salida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salidaActionPerformed(evt);
            }
        });

        buttonGroup1.add(obstaculo);
        obstaculo.setText("Obstaculo");
        obstaculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obstaculoActionPerformed(evt);
            }
        });

        buttonGroup1.add(meta);
        meta.setText("Meta");
        meta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Log");

        log.setEditable(false);
        log.setColumns(20);
        log.setRows(3);
        jScrollPane1.setViewportView(log);

        jButton1.setText("Comenzar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Especiales");

        buttonGroup1.add(waypoint);
        waypoint.setText("Waypoint");
        waypoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waypointActionPerformed(evt);
            }
        });

        buttonGroup1.add(peligro);
        peligro.setText("Peligro");
        peligro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peligroActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Factor Peligro");

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        jFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField1ActionPerformed(evt);
            }
        });

        jButton3.setText("Aplicar Peligro");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(meta)
                    .addComponent(obstaculo)
                    .addComponent(salida)
                    .addComponent(jLabel1)
                    .addComponent(peligro)
                    .addComponent(waypoint)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(salida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(obstaculo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(meta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(waypoint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(peligro)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salidaActionPerformed
        if(salida.isSelected())
        {
            tablero.setTocadoString(ConstantesGUI.origen);
            
            tablero.cargarImagenes();
        }
        
        log.append("Seleccionada salida\n");
    }//GEN-LAST:event_salidaActionPerformed

    private void obstaculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obstaculoActionPerformed
        if(obstaculo.isSelected())
        {
            tablero.setTocadoString(ConstantesGUI.obstaculo);
            
            tablero.cargarImagenes();
        }
        
        log.append("Seleccionado obstaculo\n");
    }//GEN-LAST:event_obstaculoActionPerformed

    private void metaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metaActionPerformed
        if(meta.isSelected())
        {
            tablero.setTocadoString(ConstantesGUI.meta);
            
            tablero.cargarImagenes();
        }
        
        log.append("Seleccionada meta\n");
    }//GEN-LAST:event_metaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        this.jButton1.setEnabled(false);
        
        log.append("Comenzando\n");
        
        //Recorro la matriz de casilla para ver de que tipo son las casillas
        int columnas = tablero.getColumnas();
        int filas = tablero.getFilas();
        String tipoCasilla;
        
        //Listas auxiliares para tratar las salidas, obstaculos y una meta
        List<Position> origenes = new ArrayList<Position>();
        
        List<Position> obstaculos = new ArrayList<Position>();
        
        Position meta = null;
        
        
        for(int i = 0; i < filas; i++)
            for(int j = 0; j < columnas; j++){
                
                Box c = tablero.getCasillas()[j][i];
                
                tipoCasilla = c.getImagenFondo();
                
                if(ConstantesGUI.origen.equals(tipoCasilla)){
                    origenes.add(new Position(i,j));
                }
                else if(ConstantesGUI.obstaculo.equals(tipoCasilla)){
                    obstaculos.add(new Position(i,j));
                }
                else if(ConstantesGUI.meta.equals(tipoCasilla)){
                    
                    if(meta == null){
                        
                        //Si no hab√≠a meta
                        meta = new Position(i,j);
                    }
                    else{
                        //Si hab√≠a una meta
                        new JOptionPane().showMessageDialog(null, "ERROR!! Solo puedes introducir una meta", "ERROR", JOptionPane.ERROR_MESSAGE);
                        log.append("ERROR!! Solo puedes introducir una meta\n");
                    }
                }
            }
                    //Comprueba que haya un origen m√≠nimo
            if(origenes.size() == 0){
                new JOptionPane().showMessageDialog(null, "ERROR!! Se debe tener por lo menos un origen", "ERROR", JOptionPane.ERROR_MESSAGE);
                log.append("ERROR!! Se debe tener por lo menos un origen\n");
            }
            else if(meta == null){
                new JOptionPane().showMessageDialog(null, "ERROR!! Se debe tener por lo menos una meta", "ERROR", JOptionPane.ERROR_MESSAGE);
                log.append("ERROR!! Se debe tener por lo menos un origen\n");
            }
            else{
                
                //Recorro las salidas y creo una estructura correspondiente a cada salida
                Iterator it_origenes = origenes.iterator();
              
                while(it_origenes.hasNext()){
                    
                    //Creo una estructura AEstrella
                    AStar aEstrella = new AStar(filas,columnas);
                    
                    Position salida = (Position) it_origenes.next();
                    
                    //Carga la salida
                    aEstrella.cargarSalida(salida);
                    
                    //Carga la meta
                    aEstrella.cargarMeta(meta);
                    
                    //Cargar los waypoints
                    aEstrella.cargarWaypoints(tablero.getLista_waypoints());
                    
                    //Cargar los peligros
                    aEstrella.cargarPeligros(tablero.getPeligros());
                    
                    //Carga los obstaculos
                    aEstrella.cargarObstaculos(obstaculos);
                    
                    List<Position> solucion = aEstrella.calcularCamino();
                    
                    log.append("Pintando soluci√≥n\n");
                    
                    new PaintThread(salida,meta,solucion,tablero).start();
                    
                }
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        
        this.jButton1.setEnabled(true);
        
        log.append("Reset Pulsado\n");
        
        for(int i = 0; i < tablero.getFilas(); i++)
            for(int j = 0; j < tablero.getColumnas(); j++){
        
                tablero.pintar_imagen(i,j,ConstantesGUI.fondo);
                
                tablero.getCasillas()[i][j].setImagenFondo(ConstantesGUI.fondo);
            }
        
        //Se resetea la meta
        tablero.setMetaPuesta(false);
        
        //Se construye otra lista de waypoints
        tablero.setLista_waypoints(new LinkedList<Position>());
        
        log.setText("");
        
        
        //Se vuelven las elecciones a la salida
        salida.setSelected(true);
        
        tablero.setTocadoString(ConstantesGUI.origen);
        
        tablero.setFactor_peligro(0);
        
        jFormattedTextField1.setText("0");
            
        tablero.cargarImagenes();
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void waypointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waypointActionPerformed
        if(waypoint.isSelected())
        {
            tablero.setTocadoString(ConstantesGUI.waypoint);
            
            tablero.cargarImagenes();
        }
        
        log.append("Seleccionado waypoint\n");
    }//GEN-LAST:event_waypointActionPerformed

    private void peligroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peligroActionPerformed
        if(peligro.isSelected())
        {
            tablero.setTocadoString(ConstantesGUI.peligro);
            
            tablero.cargarImagenes();
        }
        
        log.append("Seleccionado peligro\n");
    }//GEN-LAST:event_peligroActionPerformed

    private void jFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField1ActionPerformed
        tablero.setFactor_peligro(Double.valueOf(jFormattedTextField1.getText()));
    }//GEN-LAST:event_jFormattedTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        tablero.setFactor_peligro(Double.valueOf(jFormattedTextField1.getText()));
    }//GEN-LAST:event_jButton3ActionPerformed
  
    public void setTablero(Board tablero){
        this.tablero = tablero;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea log;
    private javax.swing.JRadioButton meta;
    private javax.swing.JRadioButton obstaculo;
    private javax.swing.JRadioButton peligro;
    private javax.swing.JRadioButton salida;
    private javax.swing.JRadioButton waypoint;
    // End of variables declaration//GEN-END:variables
}
